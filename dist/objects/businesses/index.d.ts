export declare const businesses: {
    get: (businessId: import("../../types/businesses").BusinessDTO["id"], authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/businesses").BusinessGetResponseDTO) | null>;
    listByLocation: (locationId: import("../../types/businesses").BusinessDTO["locationId"], authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/businesses").BusinessSearchResponseDTO) | null>;
    create: (options: import("../../types/businesses").CreateBusinessDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/businesses").BusienssCreateUpdateResponseDTO) | null>;
    update: (businessId: import("../../types/businesses").BusinessDTO["id"], options: import("../../types/businesses").UpdateBusinessDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/businesses").BusienssCreateUpdateResponseDTO) | null>;
    delete: (businessId: import("../../types/businesses").BusinessDTO["id"], authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/_global").SuccessDeleteDTO) | null>;
};
