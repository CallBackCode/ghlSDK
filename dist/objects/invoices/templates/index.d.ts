export declare const templates: {
    get: (templateId: string, options: import("../../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
    search: (options: import("../../../types/invoices").InvoicesScheduleSearchOptions, authToken: string) => Promise<(import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/invoices").InvoicesListTemplatesResponseDTO) | null>;
    create: (options: import("../../../types/invoices").InvoicesCreateTemplateDTO, authToken: string) => Promise<(import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
    update: (templateId: string, options: import("../../../types/invoices").InvoicesUpdateTemplateDTO, authToken: string) => Promise<(import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
    delete: (templateId: string, options: import("../../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/_global").SuccessDeleteDTO) | null>;
};
