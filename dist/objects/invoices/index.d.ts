export declare const invoices: {
    get: (invoiceId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetResponseDTO) | null>;
    search: (options: import("../../types/invoices").InvoicesSearchOptions, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesListResponseDTO) | null>;
    create: (options: import("../../types/invoices").InvoicesCreateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesCreateResponseDTO) | null>;
    update: (invoiceId: string, options: import("../../types/invoices").InvoicesUpdateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesCreateResponseDTO) | null>;
    delete: (invoiceId: string, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesCreateResponseDTO) | null>;
    send: (invoiceId: string, options: import("../../types/invoices").InvoicesSendDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesSendResponseDTO) | null>;
    void: (invoiceId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesCreateResponseDTO) | null>;
    recordPayment: (invoiceId: string, options: import("../../types/invoices").InvoicesRecordPaymentDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesRecordPaymentResponseDTO) | null>;
    generateInvoiceNumber: (invoiceId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGenerateNumberResponseDTO) | null>;
    templates: {
        get: (templateId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
        search: (options: import("../../types/invoices").InvoicesScheduleSearchOptions, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesListTemplatesResponseDTO) | null>;
        create: (options: import("../../types/invoices").InvoicesCreateTemplateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
        update: (templateId: string, options: import("../../types/invoices").InvoicesUpdateTemplateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetTemplateResponseDTO) | null>;
        delete: (templateId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/_global").SuccessDeleteDTO) | null>;
    };
    schedules: {
        get: (scheduleId: string, options: import("../../types/invoices").InvoicesVoidDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesScheduleResponseDTO) | null>;
        search: (options: import("../../types/invoices").InvoicesScheduleSearchOptions, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesListSchedulesResponseDTO) | null>;
        create: (options: import("../../types/invoices").InvoicesCreateScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetScheduleResponseDTO) | null>;
        update: (scheduleId: string, options: import("../../types/invoices").InvoicesUpdateScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesGetScheduleResponseDTO) | null>;
        delete: (scheduleId: string, options: import("../../types/invoices").InvoicesCancelScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/_global").SuccessDeleteDTO) | null>;
        startSchedule: (scheduleId: string, options: import("../../types/invoices").InvoicesScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesScheduleResponseDTO) | null>;
        manageAutoPay: (scheduleId: string, options: import("../../types/invoices").InvoicesScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesScheduleResponseDTO) | null>;
        cancelScheduled: (scheduleId: string, options: import("../../types/invoices").InvoicesCancelScheduleDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesScheduleResponseDTO) | null>;
    };
    text2pay: {
        createAndSend: (options: import("../../types/invoices").InvoicesTTPDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/invoices").InvoicesTTPResponseDTO) | null>;
    };
};
