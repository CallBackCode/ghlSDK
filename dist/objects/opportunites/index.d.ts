export declare const opportunities: {
    get: (opportuniyId: string, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesCreateResponseDTO) | null>;
    search: (options: import("../../types/opportunities").OpportunitiesSearchOptions, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesSearchResponseDTO) | null>;
    create: (options: import("../../types/opportunities").OpportunitiesCreateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesCreateResponseDTO) | null>;
    update: (opportunityId: string, options: import("../../types/opportunities").OpportunityUpdateDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesCreateResponseDTO) | null>;
    updateStatus: (opportunityId: string, options: import("../../types/opportunities").OpportunitiesUpdateStatusDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesCreateResponseDTO) | null>;
    upsert: (options: import("../../types/opportunities").OpportunitiesUpsertDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesUpsertResponseDTO) | null>;
    delete: (opportunityId: string, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/_global").SuccededDeleteDTO) | null>;
    followers: {
        add: (opportunityId: string, options: import("../../types/opportunities").OpportunitiesFollowersDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesAddFollowersResponseDTO) | null>;
        remove: (opportunityId: string, options: import("../../types/opportunities").OpportunitiesFollowersDTO, authToken: string) => Promise<(import("../../types/_global").BadRequestDTO | import("../../types/_global").UnauthorizedDTO | import("../../types/_global").UnprocessableDTO | import("../../types/opportunities").OpportunitiesRemoveFollowersResponseDTO) | null>;
    };
};
