export declare const tags: {
    get: (locationId: string, tagId: string, authToken: string) => Promise<import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/locations").LocationsTagResponseDTO> | null;
    search: (locationId: string, authToken: string) => Promise<import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/locations").LocationsTagsResponseDTO> | null;
    create: (locationId: string, options: import("../../../types/locations").LocationsTagBodySchema, authToken: string) => Promise<import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/locations").LocationsTagResponseDTO> | null;
    update: (locationId: string, tagId: string, options: import("../../../types/locations").LocationsTagBodySchema, authToken: string) => Promise<import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/locations").LocationsTagResponseDTO> | null;
    delete: (locationId: string, tagId: string, authToken: string) => Promise<import("../../../types/_global").BadRequestDTO | import("../../../types/_global").UnauthorizedDTO | import("../../../types/_global").UnprocessableDTO | import("../../../types/_global").SuccededDeleteDTO> | null;
};
